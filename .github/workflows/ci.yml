name: mkdocs conversion
on:
  workflow_dispatch:
  push:
    paths:
      - 'docs/**'

jobs:
  build:
    runs-on: ubuntu-latest
    if: startsWith(github.event.head_commit.message, '[PUBLISHER]')
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v3
        with:
          python-version: 3.10.4
      - name: get changed files
        uses: tj-actions/changed-files@v23
        id: changed-files
        with:
          separator: ";"
          quotepath: "false"
          since_last_remote_commit: true
      - name: Install OBS2Mk
        run: |
          pip install obs2mk --upgrade
      - name: generate markdown
        run: |
          echo "File processed:  " >> $GITHUB_STEP_SUMMARY
      - name: obs2mk source files
        run: |
          IFS=$';'
          changed="${{ steps.changed-files.outputs.all_changed_files }}"
          for file in $changed; do
            if [[ "$file" == *md ]] 
              then
                echo "- $file " >> $GITHUB_STEP_SUMMARY
                obs2mk --minimal file "$file"
              fi
            done
          unset IFS
      - name: Mkdocs build
        run: |
          pip install -r requirements.txt
          mkdocs gh-deploy --force --clean
      - name: Push updateds files
        run: |
          git pull
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@users.noreply.github.com'
          rm -rf ./site/
          git add . 
          fileList=$(git status --porcelain | tr -d '\n' | tr -d 'M' |tr -d '??')
          git commit -m "🏓 Publishing from ObsidianMD" -m "${fileList}"
          git push
  ending:
    runs-on: ubuntu-latest
    needs: build
    if: always() && (needs.build.result == 'failure')
    steps: 
      - name: Ending summary
        run: |
          echo "⚠️ Error during build!!! >> $GITHUB_STEP_SUMMARY
  ending2:
    runs-on: ubuntu-latest
    needs: [build]
    if: always() && (needs.build.result == 'success')
    steps:
      - name: ending summary
        run: |
          echo "🎉 Successfully converted files and build documentation" >> $GITHUB_STEP_SUMMARY
    
